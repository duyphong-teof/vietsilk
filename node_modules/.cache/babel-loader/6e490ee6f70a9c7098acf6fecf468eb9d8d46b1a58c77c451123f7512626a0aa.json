{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst Product = require('./models/Product');\n\n// Lấy tất cả sản phẩm, hoặc lọc theo gioiTinh\nrouter.get('/', async (req, res) => {\n  try {\n    const {\n      gioiTinh\n    } = req.query;\n    let query = {};\n    if (gioiTinh) {\n      if (gioiTinh.toLowerCase() === 'treem' || gioiTinh.toLowerCase() === 'trẻ em') {\n        query.gioiTinh = {\n          $in: ['Bé Nam', 'Bé Nữ']\n        };\n      } else {\n        query.gioiTinh = new RegExp(`^${gioiTinh}$`, 'i');\n      }\n    }\n    const products = await Product.find(query);\n    res.json(products);\n  } catch (error) {\n    console.error('Lỗi khi lấy sản phẩm:', error);\n    res.status(500).json({\n      error: 'Lỗi server'\n    });\n  }\n});\n\n// Route lấy sản phẩm theo ID (maSanPham)\nrouter.get('/:id', async (req, res) => {\n  try {\n    const product = await Product.findOne({\n      _id: req.params.id\n    });\n    if (!product) {\n      return res.status(404).json({\n        error: 'Sản phẩm không tồn tại'\n      });\n    }\n    res.json(product);\n  } catch (error) {\n    console.error('Lỗi khi lấy sản phẩm theo id:', error);\n    res.status(500).json({\n      error: 'Lỗi server'\n    });\n  }\n});\n\n// Route tìm kiếm sản phẩm theo từ khóa (name hoặc mô tả), kèm tùy chọn gioiTinh\nrouter.get('/search', async (req, res) => {\n  try {\n    const {\n      q,\n      gioiTinh\n    } = req.query;\n    if (!q || q.trim() === '') {\n      return res.status(400).json({\n        error: 'Thiếu tham số tìm kiếm q'\n      });\n    }\n    let gioiTinhQuery = {};\n    if (gioiTinh) {\n      if (gioiTinh.toLowerCase() === 'treem' || gioiTinh.toLowerCase() === 'trẻ em') {\n        gioiTinhQuery.gioiTinh = {\n          $in: ['Bé Nam', 'Bé Nữ']\n        };\n      } else {\n        gioiTinhQuery.gioiTinh = new RegExp(`^${gioiTinh}$`, 'i');\n      }\n    }\n\n    // Tìm theo tên hoặc mô tả chứa từ khóa, không phân biệt hoa thường\n    const searchRegex = new RegExp(q, 'i');\n    const products = await Product.find({\n      ...gioiTinhQuery,\n      $or: [{\n        name: searchRegex\n      }, {\n        description: searchRegex\n      } // Nếu có field mô tả\n      ]\n    });\n    res.json(products);\n  } catch (error) {\n    console.error('Lỗi khi tìm kiếm sản phẩm:', error);\n    res.status(500).json({\n      error: 'Lỗi server'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","Product","get","req","res","gioiTinh","query","toLowerCase","$in","RegExp","products","find","json","error","console","status","product","findOne","_id","params","id","q","trim","gioiTinhQuery","searchRegex","$or","name","description","module","exports"],"sources":["D:/NodeJs-ReactJs/vietsilk-app/src/frontend/Header.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Product = require('./models/Product');\r\n\r\n// Lấy tất cả sản phẩm, hoặc lọc theo gioiTinh\r\nrouter.get('/', async (req, res) => {\r\n  try {\r\n    const { gioiTinh } = req.query;\r\n\r\n    let query = {};\r\n\r\n    if (gioiTinh) {\r\n      if (gioiTinh.toLowerCase() === 'treem' || gioiTinh.toLowerCase() === 'trẻ em') {\r\n        query.gioiTinh = { $in: ['Bé Nam', 'Bé Nữ'] };\r\n      } else {\r\n        query.gioiTinh = new RegExp(`^${gioiTinh}$`, 'i');\r\n      }\r\n    }\r\n\r\n    const products = await Product.find(query);\r\n    res.json(products);\r\n  } catch (error) {\r\n    console.error('Lỗi khi lấy sản phẩm:', error);\r\n    res.status(500).json({ error: 'Lỗi server' });\r\n  }\r\n});\r\n\r\n// Route lấy sản phẩm theo ID (maSanPham)\r\nrouter.get('/:id', async (req, res) => {\r\n  try {\r\n    const product = await Product.findOne({ _id: req.params.id });\r\n    if (!product) {\r\n      return res.status(404).json({ error: 'Sản phẩm không tồn tại' });\r\n    }\r\n    res.json(product);\r\n  } catch (error) {\r\n    console.error('Lỗi khi lấy sản phẩm theo id:', error);\r\n    res.status(500).json({ error: 'Lỗi server' });\r\n  }\r\n});\r\n\r\n// Route tìm kiếm sản phẩm theo từ khóa (name hoặc mô tả), kèm tùy chọn gioiTinh\r\nrouter.get('/search', async (req, res) => {\r\n  try {\r\n    const { q, gioiTinh } = req.query;\r\n    if (!q || q.trim() === '') {\r\n      return res.status(400).json({ error: 'Thiếu tham số tìm kiếm q' });\r\n    }\r\n\r\n    let gioiTinhQuery = {};\r\n    if (gioiTinh) {\r\n      if (gioiTinh.toLowerCase() === 'treem' || gioiTinh.toLowerCase() === 'trẻ em') {\r\n        gioiTinhQuery.gioiTinh = { $in: ['Bé Nam', 'Bé Nữ'] };\r\n      } else {\r\n        gioiTinhQuery.gioiTinh = new RegExp(`^${gioiTinh}$`, 'i');\r\n      }\r\n    }\r\n\r\n    // Tìm theo tên hoặc mô tả chứa từ khóa, không phân biệt hoa thường\r\n    const searchRegex = new RegExp(q, 'i');\r\n    const products = await Product.find({\r\n      ...gioiTinhQuery,\r\n      $or: [\r\n        { name: searchRegex },\r\n        { description: searchRegex }  // Nếu có field mô tả\r\n      ]\r\n    });\r\n\r\n    res.json(products);\r\n  } catch (error) {\r\n    console.error('Lỗi khi tìm kiếm sản phẩm:', error);\r\n    res.status(500).json({ error: 'Lỗi server' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}